#Linked List
class Node():
    def __init__(self,data,next= None):
        self.data=data
        self.next=next
class LinkedList():
    def __init__(self):
        self.head=None
    def insertnode(self,data):
        self.head=Node(data,self.head)
    def size(self):
        c=0
        Node=self.head
        while(Node):
            c+=1
            Node=Node.next
        return c
    def getfirst(self):
        return vars(self.head)
    def getlast(self):
        if (self.head==None):
            return ("Empty List")
        node=self.head
        while (node):
            if (node.next==None):
                return node
            node=node.next
    def clear(self):
        self.head=None
    def removefirst(self):
        if (self.head==None):
            return
        self.head=self.head.next
        return (vars(self.head))
    def removelast(self):
        if self.head==None:
            return
        if self.head.next==None:
            self.head=None
            return
        previous=self.head
        node=self.head.next
        while (node.next):
            previous=node
            node=node.next
        previous.next=None
        return vars(previous)
    def insertlast(self,data):
        last=self.getlast()
        if last:
            last.next=Node(data)
        else:
            self.head=Node(data)
    def getat(self,index):            
        count=0
        node=self.head
        while(node):
            if count==index:
                return node
            count+=1
            node=node.next
        return None
    def removeat(self,index):
        if self.head==None:
            return
        if index==0:
            self.head=self.head.next
            return
        previous=self.getat(index-1)
        if(previous==None or previous.next==None):
            return
        previous.next=previous.next.next
    def insertat(self, data, index):
        if self.head==None:
            self.head=Node(data)
            return
        if index==0:
            self.head=Node(data,self.head)
            return
        previous=self.getat(index-1) or self.getlast()
        previous.next=Node(data,previous.next)
        
            

n=Node(5)
l=LinkedList()
l.insertnode(5)
l.insertnode(6)
l.insertnode(7)
l.insertnode(4)
l.insertnode(8)
l.insertnode(9)
l.insertnode(9)
